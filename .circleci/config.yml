version: 2.1
orbs:
  node: circleci/node@5
jobs:
  test-node:
    executor: node/default
    working_directory: ~/project/backend
    steps:
      - checkout:
          path: ~/project
      - restore_cache:
          keys:
            - node-modules-{{ checksum "package-lock.json" }}
            - node-modules-
      - node/install-packages:
          pkg-manager: npm
      - save_cache:
          paths:
            - ./node_modules
          key: node-modules-{{ checksum "package-lock.json" }}
      - run:
          name: Run tests
          command: echo "No test specified in package.json"
  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: deploy
          command: '#e.g. ./deploy.sh'
  sonarqube:
    working_directory: ~/build
    docker:
      - image: sonarsource/sonar-scanner-cli
    resource_class: small
    steps:
      - run: ls -l
      - run: sonar-scanner -v
      - attach_workspace:
          at: ~/workspace
      - run: | 
          SONAR_BRANCH="${CIRCLE_BRANCH:-master}"
          echo "Sonar branch value is: " $SONAR_BRANCH
          echo "Sonar org value is : "$SONAR_ORG
          sonar-scanner \
          -Dsonar.projectKey="$SONAR_PROJECT_KEY" \
          -Dsonar.organization="$SONAR_ORG" \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.exclusions="**/android/**,**/ios/**" \
          -Dsonar.login="$SONAR_TOKEN" \
          -Dsonar.branch.name="$SONAR_BRANCH" \
          -Dsonar.sources="."
  newmantest:
    docker:
      - image: cimg/node:18.20.2
    resource_class: small
    steps:
      - checkout
      - run:
          command: |
            cd backend
            npm install
      - run:
          command: |
            cd backend
            npm run newman run ./APDSPOENT.postman_collection.json -e ./APDSPOENT.postman_environment.json --insecure --reporters cli,junit
      - attach_workspace:
          at: ~/workspace
workflows:
  build-and-test:
    jobs:
      - test-node
      - sonarqube
      - newmantest:
          requires:
            - sonarqube
